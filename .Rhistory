}
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
rf(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
load("final_data.rda")
data <- data.frame(new_data)
library(zoo)
library(MESS)
library(splus2R)
load("data.rda")
data <- data.frame(data)
subset(data, id == 1)
subset(data, id == 2)
subset(data, id == 3)
library(randomForest)
library(MASS)
library(cvAUC)
load("final_data.rda")
data <- data.frame(new_data)
summary(data)
test = subset(data, id == 14)
train = subset(data, id != 14)
nrow(data)
nrow(test)
nrow(train)
subset(data, id == 14)
subset(data, id == 1)
?randomForest
library(randomForest)
library(MASS)
library(cvAUC)
load("final_data.rda")
data <- data.frame(new_data)
summary(data)
nrow(subset(data, label == 1))/nrow(data)
nrow(subset(data, label == 0))/nrow(data)
data$label = as.factor(data$label)
test = subset(data, id == 14)
train = subset(data, id != 14)
nrow(data)
nrow(test)
nrow(train)
colnames(train)
personal = colnames(train)[3:6]
wrist_acc = colnames(train)[7:8]
chest_acc = colnames(train)[24:25]
wrist_bvp = colnames(train)[9:11]
wrist_eda = colnames(train)[12:17]
wrist_temp = colnames(train)[18:23]
wrist_physio = colnames(train)[9:23]
chest_ecg = colnames(train)[26:28]
chest_eda = colnames(train)[29:34]
chest_emg = colnames(train)[35:37]
chest_resp = colnames(train)[38:40]
chest_temp = colnames(train)[41:46]
chest_physio = colnames(train)[26:46]
all_wrist = colnames(train)[7:23]
all_chest = colnames(train)[24:46]
all_physio = colnames(train)[c(9:23,26:46)]
all_modalities = colnames(train)[c(7:46)]
predictor_vars <- c("personal", "wrist_acc", "chest_acc", "wrist_bvp", "wrist_eda", "wrist_temp", "wrist_physio", "chest_ecg", "chest_eda", "chest_emg", "chest_resp", "chest_temp", "chest_physio", "all_wrist", "all_chest", "all_physio", "all_modalities")
test_sample = test
test_sample = test
train_sample = train
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
LDA(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
for (i in 2:length(predictor_vars)){
cat("Predictors: personal +", predictor_vars[i], "\n")
LDA(train_sample, test_sample, c(eval(parse(text = predictor_vars[1])), eval(parse(text = predictor_vars[i]))))
}
logistic <- function(train_sample, test_sample, predictors){
model_logistic <- glm(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), family=binomial(link='logit'), data = train_sample)
predict_logistic <- predict(model_logistic, test_sample)
predict_logistic <- ifelse(predict_logistic > 0.5,1,0)
cat("Accuracy is", mean(test_sample$label == predict_logistic)*100, "% \n")
cat("AUROC is", AUC(as.numeric(as.character(predict_logistic)), as.numeric(as.character(test_sample$label))), "\n \n")
}
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
logistic(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
for (i in 2:length(predictor_vars)){
cat("Predictors: personal +", predictor_vars[i], "\n")
logistic(train_sample, test_sample, c(eval(parse(text = predictor_vars[1])), eval(parse(text = predictor_vars[i]))))
}
set.seed(1)
train_indices = sample(nrow(train), 10000)
train_sample = train[train_indices,]
# Run this instead to train on the full train set
# test_sample = train
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
rf(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
set.seed(1)
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
# Run this instead to train on the full train set
# test_sample = train
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
rf(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
for (i in 2:length(predictor_vars)){
cat("Predictors: personal +", predictor_vars[i], "\n")
rf(train_sample, test_sample, c(eval(parse(text = predictor_vars[1])), eval(parse(text = predictor_vars[i]))))
}
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
cv
for(i in 1:6){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
# Run this instead to train on the full train set
# test_sample = train
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
cv
rowMeans(cv[,c(2:16)])
rowMeans(cv[,c(2:16)])
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
for(i in 1:6){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
# Run this instead to train on the full train set
# test_sample = train
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(c(eval(parse(text = predictor_vars[1])), predictors), collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
rowMeans(cv[,c(2:16)])
rowSds(cv[,c(2:16)])
library(matrixStats)
rowMeans(cv[,c(2:16)])
rowSds(cv[,c(2:16)])
rowMeans(cv[,c(2:16)])
rowSds(as.matrix(cv[,c(2:16)]))
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
for(i in 1:6){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
# Run this instead to train on the full train set
# test_sample = train
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
library(randomForest)
library(MASS)
library(cvAUC)
library(matrixStats)
load("final_data.rda")
data <- data.frame(new_data)
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
for(i in 1:6){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
# Run this instead to train on the full train set
# test_sample = train
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
cv
rowMeans(cv[,c(2:16)])
rowSds(as.matrix(cv[,c(2:16)]))
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
for(i in 1:6){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
# Run this instead to train on the full train set
# test_sample = train
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(c(eval(parse(text = predictor_vars[1])), predictors), collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
nrow(data)
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
cv
i = 1
j = 1
test = subset(data, id == 1)
train = subset(data, id != 1)
test_sample = test
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
cv
predict_rf
predictors
model_rf
train
train_sample
test_sample
model_rf <- randomForest(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
data$label = as.factor(data$label)
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
i = 1
j = 1
test = subset(data, id == 1)
train = subset(data, id != 1)
test_sample = test
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
cv
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
for(i in 1:6){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
# Run this instead to train on the full train set
# test_sample = train
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
cv
rowMeans(cv[,c(2:16)])
rowSds(as.matrix(cv[,c(2:16)]))
cv <- data.frame(matrix(ncol = 16, nrow = 12))
rownames(cv) <- c("wrist_physio acc", "wrist_physio auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_physio", "wrist_physio", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
cv
for(i in 1:6){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
# Run this instead to train on the full train set
# test_sample = train
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_rf <- randomForest(as.formula(paste("label ~ ", paste(c(eval(parse(text = predictor_vars[1])), predictors), collapse = ' + '))), ntree = 500, importance = FALSE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
acc = mean(test_sample$label == predict_rf)*100
auc = AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
cv
rowMeans(cv[,c(2:16)])
rowSds(as.matrix(cv[,c(2:16)]))
cv
rowMeans(cv[,c(2:16)])
rowSds(as.matrix(cv[,c(2:16)]))
cv <- data.frame(matrix(ncol = 16, nrow = 16))
rownames(cv) <- c("wrist_bvp acc", "wrist_bvp auc", "wrist_physio acc", "wrist_physio auc", "chest_ecg acc", "chest_ecg auc", "chest_physio acc", "chest_physio auc", "all_wrist acc", "all_wrist auc", "all_chest acc", "all_chest auc", "all_physio acc", "all_physio auc", "all_modalities acc", "all_modalities auc")
colnames(cv) <- c("predictor", c(1:15))
cv$predictor <- c("wrist_bvp", "wrist_bvp","wrist_physio", "wrist_physio", "chest_ecg", "chest_ecg", "chest_physio", "chest_physio", "all_wrist", "all_wrist", "all_chest", "all_chest", "all_physio", "all_physio", "all_modalities", "all_modalities")
for(i in 1:8){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
test_sample = train
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_lda <- lda(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), data = train_sample)
predict_lda <- predict(model_lda, test_sample)[[1]]
acc = mean(test_sample$label == predict_lda)*100
auc = AUC(as.numeric(as.character(predict_lda)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
cv
rowMeans(cv[,c(2:16)])
rowSds(as.matrix(cv[,c(2:16)]))
predictor_vars[1]
train_sample = train
LDA <- function(train_sample, test_sample, predictors){
model_lda <- lda(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), data = train_sample)
predict_lda <- predict(model_lda, test_sample)[[1]]
cat("Accuracy is", mean(test_sample$label == predict_lda)*100, "% \n")
cat("AUROC is", AUC(as.numeric(as.character(predict_lda)), as.numeric(as.character(test_sample$label))), "\n \n")
}
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
LDA(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
set.seed(1)
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
# Run this instead to train on the full train set
# train_sample = train
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
LDA(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
library(randomForest)
library(MASS)
library(cvAUC)
library(matrixStats)
load("final_data.rda")
data <- data.frame(new_data)
summary(data)
nrow(subset(data, label == 1))/nrow(data)
nrow(subset(data, label == 0))/nrow(data)
data$label = as.factor(data$label)
test = subset(data, id == 14)
train = subset(data, id != 14)
nrow(data)
nrow(test)
nrow(train)
colnames(train)
personal = colnames(train)[3:6]
wrist_acc = colnames(train)[7:8]
chest_acc = colnames(train)[24:25]
wrist_bvp = colnames(train)[9:11]
wrist_eda = colnames(train)[12:17]
wrist_temp = colnames(train)[18:23]
wrist_physio = colnames(train)[9:23]
chest_ecg = colnames(train)[26:28]
chest_eda = colnames(train)[29:34]
chest_emg = colnames(train)[35:37]
chest_resp = colnames(train)[38:40]
chest_temp = colnames(train)[41:46]
chest_physio = colnames(train)[26:46]
all_wrist = colnames(train)[7:23]
all_chest = colnames(train)[24:46]
all_physio = colnames(train)[c(9:23,26:46)]
all_modalities = colnames(train)[c(7:46)]
predictor_vars <- c("personal", "wrist_acc", "chest_acc", "wrist_bvp", "wrist_eda", "wrist_temp", "wrist_physio", "chest_ecg", "chest_eda", "chest_emg", "chest_resp", "chest_temp", "chest_physio", "all_wrist", "all_chest", "all_physio", "all_modalities")
test_sample = test
set.seed(1)
train_indices = sample(nrow(train), 1000)
train_sample = train[train_indices,]
# Run this instead to train on the full train set
# train_sample = train
rf <- function(train_sample, test_sample, predictors){
set.seed(1)
model_rf <- randomForest(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), ntree = 500, importance = TRUE, data = train_sample)
predict_rf <- predict(model_rf, test_sample)
cat("Accuracy is", mean(test_sample$label == predict_rf)*100, "% \n")
cat("AUROC is", AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label))), "\n \n")
if (mean(test_sample$label == predict_rf) == 1){
df <- data.frame(importance(model_rf, type = 1))
print(df)
cat('\n')
}
}
print_baseline <- function(test_sample){
predict_rf <- rep(0,nrow(test_sample))
cat("Accuracy is", mean(test_sample$label == predict_rf)*100, "% \n")
cat("AUROC is", AUC(as.numeric(as.character(predict_rf)), as.numeric(as.character(test_sample$label))), "\n \n")
}
print_baseline(test_sample)
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
rf(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
train_sample = train
LDA <- function(train_sample, test_sample, predictors){
model_lda <- lda(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), data = train_sample)
predict_lda <- predict(model_lda, test_sample)[[1]]
cat("Accuracy is", mean(test_sample$label == predict_lda)*100, "% \n")
cat("AUROC is", AUC(as.numeric(as.character(predict_lda)), as.numeric(as.character(test_sample$label))), "\n \n")
}
for (i in 1:length(predictor_vars)){
cat("Predictors: ", predictor_vars[i], "\n")
LDA(train_sample, test_sample, eval(parse(text = predictor_vars[i])))
}
for(i in 1:8){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
test_sample = train
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_lda <- lda(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), data = train_sample)
predict_lda <- predict(model_lda, test_sample)[[1]]
acc = mean(test_sample$label == predict_lda)*100
auc = AUC(as.numeric(as.character(predict_lda)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
cv
for(i in 1:8){
for (j in 1:15){
set.seed(1)
test = subset(data, id == j)
train = subset(data, id != j)
test_sample = test
train_sample = train
predictor = cv$predictor[(i-1)*2+1]
predictors = eval(parse(text = predictor))
model_lda <- lda(as.formula(paste("label ~ ", paste(predictors, collapse = ' + '))), data = train_sample)
predict_lda <- predict(model_lda, test_sample)[[1]]
acc = mean(test_sample$label == predict_lda)*100
auc = AUC(as.numeric(as.character(predict_lda)), as.numeric(as.character(test_sample$label)))
cv[(i-1)*2+1,j+1] <- acc
cv[(i-1)*2+2,j+1] <- auc
}
}
cv
